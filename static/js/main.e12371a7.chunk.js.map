{"version":3,"sources":["components/GoodsList.tsx","App.tsx","index.tsx"],"names":["SortBy","GoodsList","listOfgoods","useState","isReverse","setIsReverse","None","sortBy","setSortBy","wordLength","setWordLength","newGoodsList","filter","word","length","Alphabet","sort","prevGood","nextGood","localeCompare","Length","reverse","type","onClick","className","onChange","event","value","Number","target","Array","from","_","i","map","num","item","goodsFromServer","App","isVisible","setIsVisible","ReactDOM","render","document","getElementById"],"mappings":"6KAGKA,E,sDAAAA,K,gBAAAA,E,oBAAAA,E,SAAAA,M,KAUE,IAAMC,EAA6B,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAC3C,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4BF,mBAASH,EAAOM,MAA5C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCL,mBAAS,GAA7C,mBAAOM,EAAP,KAAmBC,EAAnB,KAEMC,EAAeT,EAAYU,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUL,KAE/D,OAAQF,GACN,KAAKP,EAAOe,SACVJ,EAAaK,MACX,SAACC,EAAUC,GAAX,OAAwBD,EAASE,cAAcD,MAEjD,MAEF,KAAKlB,EAAOoB,OACVT,EAAaK,MACX,SAACC,EAAUC,GAAX,OAAwBD,EAASH,OAASI,EAASJ,UAQrDV,GACFO,EAAaU,UAyBf,OACE,gCACE,gCACE,wBACEC,KAAK,SACLC,QAfS,WACflB,GAAcD,IAeRoB,UAAU,oBAHZ,qBAQA,wBACEF,KAAK,SACLC,QAnCe,WACrBf,EAAUR,EAAOe,WAmCXS,UAAU,oBAHZ,iCAQA,wBACEF,KAAK,SACLC,QAvCa,WACnBf,EAAUR,EAAOoB,SAuCXI,UAAU,oBAHZ,4BAQA,wBACEC,SACE,SAAAC,GAAK,OA3COC,EA2CUC,OAAOF,EAAMG,OAAOF,YA1ClDjB,EAAciB,GADK,IAACA,GA6CdA,MAAOlB,EACPe,UAAU,oBALZ,SAQIM,MAAMC,KAAK,CAAEjB,OAAQ,KAAM,SAACkB,EAAGC,GAAJ,OAAUA,EAAI,KAAGC,KAAI,SAAAC,GAAG,OACjD,wBAAQR,MAAOQ,EAAf,kCAAiDA,IAAxBA,QAK/B,wBACEb,KAAK,SACLC,QAjDM,WACZlB,GAAa,GACbG,EAAUR,EAAOM,MACjBI,EAAc,IA+CRc,UAAU,oBAHZ,sBASF,6BAEIb,EAAauB,KAAI,SAACE,GAAD,OACf,oBAAeZ,UAAU,kBAAzB,SACGY,GADMA,YChHfC,G,MAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAwBaC,EArBO,WACpB,MAAkCnC,oBAAS,GAA3C,mBAAOoC,EAAP,KAAkBC,EAAlB,KAEA,OACE,sBAAKhB,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,2BACCe,GAAa,cAAC,EAAD,CAAWrC,YAAamC,KAEpCE,GACA,wBACEjB,KAAK,SACLC,QAAS,kBAAMiB,GAAa,IAC5BhB,UAAU,cAHZ,uBCvBRiB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.e12371a7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './GoodsList.scss';\n\nenum SortBy {\n  Length = 'length',\n  Alphabet = 'alphabet',\n  None = '',\n}\n\ntype Props = {\n  listOfgoods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ listOfgoods }) => {\n  const [isReverse, setIsReverse] = useState(false);\n  const [sortBy, setSortBy] = useState(SortBy.None);\n  const [wordLength, setWordLength] = useState(1);\n\n  const newGoodsList = listOfgoods.filter(word => word.length >= wordLength);\n\n  switch (sortBy) {\n    case SortBy.Alphabet:\n      newGoodsList.sort(\n        (prevGood, nextGood) => prevGood.localeCompare(nextGood),\n      );\n      break;\n\n    case SortBy.Length:\n      newGoodsList.sort(\n        (prevGood, nextGood) => prevGood.length - nextGood.length,\n      );\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReverse) {\n    newGoodsList.reverse();\n  }\n\n  const sortByAlphabet = () => {\n    setSortBy(SortBy.Alphabet);\n  };\n\n  const sortByLength = () => {\n    setSortBy(SortBy.Length);\n  };\n\n  const handleChange = (value: number) => {\n    setWordLength(value);\n  };\n\n  const reversed = () => {\n    setIsReverse(!isReverse);\n  };\n\n  const reset = () => {\n    setIsReverse(false);\n    setSortBy(SortBy.None);\n    setWordLength(1);\n  };\n\n  return (\n    <div>\n      <div>\n        <button\n          type=\"button\"\n          onClick={reversed}\n          className=\"GoodsList__button\"\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={sortByAlphabet}\n          className=\"GoodsList__button\"\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={sortByLength}\n          className=\"GoodsList__button\"\n        >\n          Sort by length\n        </button>\n\n        <select\n          onChange={\n            event => handleChange(Number(event.target.value))\n          }\n          value={wordLength}\n          className=\"GoodsList__button\"\n        >\n          {\n            Array.from({ length: 10 }, (_, i) => i + 1).map(num => (\n              <option value={num} key={num}>{`Word length >= ${num}`}</option>\n            ))\n          }\n        </select>\n\n        <button\n          type=\"button\"\n          onClick={reset}\n          className=\"GoodsList__button\"\n        >\n          Reset\n        </button>\n      </div>\n\n      <ul>\n        {\n          newGoodsList.map((item) => (\n            <li key={item} className=\"GoodsList__item\">\n              {item}\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { GoodsList } from './components';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">List of goods</h1>\n      {isVisible && <GoodsList listOfgoods={goodsFromServer} />}\n\n      {!isVisible && (\n        <button\n          type=\"button\"\n          onClick={() => setIsVisible(true)}\n          className=\"App__button\"\n        >\n          Start\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}